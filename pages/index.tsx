import { Title, Table } from "@mantine/core";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import httpVerbs from "../utils/httpVerbs";
import Code from "../components/Code";

const Home: NextPage = () => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Cornerstone Developer Docs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <Title order={1}>Cornerstone API Reference</Title>
        <p>
          The Cornerstone API is a HTTP JSON API and allows you to programatically add, update,
          retrieve, and delete records from various resources, allowing you to connect data.
        </p>
        <p>
          You can access the API directly via HTTP, via the official JavaScript API client, or via
          any third-party integrations for your language of choice.
        </p>
        <Title order={2}>HTTP Verbs</Title>
        <Table>
          <thead>
            <tr>
              <th>Verb</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            {httpVerbs.map((verb) => (
              <tr key={verb.method}>
                <td>{verb.method}</td>
                <td>{verb.description}</td>
              </tr>
            ))}
          </tbody>
        </Table>
        <Title order={2}>Parameters</Title>
        <p>Requests may have both required and/or optional parameters.</p>
        <p>
          Depending on the HTTP verb, the parameters may be in either the URL itself, or in the
          request body.
        </p>
        <Title order={3}>Route Params</Title>
        <p>
          Route params will be defined as part of the path for a given API endpoint. They will be
          highlighted in a separate color, and prefixed with a colon ( <Code>:</Code> ) for easy
          visibility.
        </p>
        <p>For example:</p>
        <Code>
          GET /sites/<span className="route-param">:site_id</span>/collections
        </Code>
        <p>
          In this example, <Code>site_id</Code> is the route param.
        </p>
        <Title order={3}>Query String</Title>
        <p>
          <Code>GET</Code> requests will have their parameters passed in via the query string.
        </p>
        <p>For example:</p>
        <p>
          <Code>/info?foo=bar&abc=123</Code>
        </p>
        <p>
          In this example, the query string contains two parameters, <Code>foo</Code> and{" "}
          <Code>abc</Code>.
        </p>
        <Title order={3}>Request Body</Title>
        <p>
          All other requests will have their parameters passed in as part of the JSON-formatted
          request body. <Code>POST</Code>, <Code>PUT</Code> and <Code>PATCH</Code> requests
          including JSON-formatted request bodies should ensure the <Code>Content-Type</Code> header
          is set to <Code>application/json</Code>.
        </p>
      </div>
    </div>
  );
};

export default Home;
